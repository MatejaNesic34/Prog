FORMA 1
=============================================================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
 
namespace _4ЕИТ_A13
{
    public partial class Form1 : Form
    {
        string connstr = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\A13.mdf;Integrated Security=True";
        DataTable dtProd = new DataTable();
        public Form1()
        {
            InitializeComponent();
        }
 
        private void Form1_Load(object sender, EventArgs e)
        {
            OsveziListuProducenata();
        }
        private void OsveziListuProducenata()
        {
            SqlConnection conn = new SqlConnection(connstr);
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = conn;
            cmd.CommandText = "select ProducentID, Ime, Email from Producent";
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            try
            {
                dtProd.Clear();
                da.Fill(dtProd);
                listBox1.Items.Clear();
                foreach (DataRow dr in dtProd.Rows)
                {
                    listBox1.Items.Add(String.Format("{0,-7}{1,-40}{2,-30}", dr[0], dr[1], dr[2]));
                }
                //int minID = (int)dtProd.Compute("min([ProducentID])", ""); // najmanja vrednost id u koloni nam ne treba, treba nam ideks
                DataRow[] sortirani = dtProd.Select("", "ProducentID ASC");
                DataRow najmanji = sortirani.FirstOrDefault(); // prvi red - adresa reda sa najmanjim ProducentID
                int indMin = dtProd.Rows.IndexOf(najmanji); // indeks tog reda u dtProd isti kao i u listBox-u
                listBox1.SelectedIndex = indMin; // ova naredba implicitno poziva listBox1_SelectedIndexChanged 
            }
            catch (Exception ex)
            {
                MessageBox.Show("Greska: " + ex.Message);
            }
            finally
            {
                conn.Close();
                cmd.Dispose();
                da.Dispose();
            }
        }
 
        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (listBox1.SelectedItems.Count > 0)
            {
                textBoxSifra.Text =
                    dtProd.Rows[listBox1.SelectedIndex][0].ToString();
                textBoxIme.Text =
                    dtProd.Rows[listBox1.SelectedIndex][1].ToString();
                textBoxEmail.Text =
                    dtProd.Rows[listBox1.SelectedIndex][2].ToString();
            }
        }
 
        private void toolStripButtonIzmeni_Click(object sender, EventArgs e)
        {
            if (listBox1.SelectedIndex == -1)
            {
                MessageBox.Show("Niste izabrali producenta kog menjate!");
                return;
            }
            if (textBoxIme.Text == "" || textBoxEmail.Text == "")
            {
                MessageBox.Show("Morate popuniti sva polja!");
                return;
            }
            SqlConnection conn = new SqlConnection(connstr);
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = conn;
            cmd.CommandText = "UPDATE Producent " +
                "SET Ime=@ime, Email=@email " + // ProducentID se ne menja (kolona ima Identity true)
                "WHERE ProducentID=@id";
            cmd.Parameters.AddWithValue("@ime", textBoxIme.Text);
            cmd.Parameters.AddWithValue("@email", textBoxEmail.Text);
            cmd.Parameters.AddWithValue("@id", int.Parse(textBoxSifra.Text));
            int selInd = listBox1.SelectedIndex;
            try
            {
                conn.Open();
                cmd.ExecuteNonQuery();
                conn.Close();
                MessageBox.Show("Uspešna izmena!");
                OsveziListuProducenata();
                listBox1.SelectedIndex = selInd;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Greska! " + ex.Message);
            }
            finally 
            {
                conn.Close();
                cmd.Dispose();
            }
        }
 
        private void toolStripButtonOAplikaciji_Click(object sender, EventArgs e)
        {
            FormOAplikaciji foa = new FormOAplikaciji();
            foa.ShowDialog();
        }
 
        private void toolStripButtonExit_Click(object sender, EventArgs e)
        {
            this.Close();
        }
 
        private void toolStripButtonAnaliza_Click(object sender, EventArgs e)
        {
            FormAnaliza fa=new FormAnaliza();
            fa.ShowDialog();
        }
    }
}
==================================================================================================================================================================
FORMA 2
==================================================================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
 
namespace _4ЕИТ_A13
{
    public partial class FormAnaliza : Form
    {
        string connstr = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\A13.mdf;Integrated Security=True";
        public FormAnaliza()
        {
            InitializeComponent();
        }
 
        private void buttonPrikazi_Click(object sender, EventArgs e)
        {
            DataTable dt = new DataTable();
            string sqlupit = "select p.Ime as Producent, COUNT(f.FilmID) as Broj " +
                "from Producent as p, Film as f, Producirao as pf " +
                "where p.ProducentID=pf.ProducentID and " +
                "pf.FilmID=f.FilmID " +
                "group by p.Ime";
            SqlConnection conn = new SqlConnection(connstr);
            SqlCommand cmd = new SqlCommand(sqlupit, conn);
            SqlDataAdapter adapter = new SqlDataAdapter(cmd);
            try
            {
                adapter.Fill(dt);
                dataGridView1.DataSource = dt;
                chart1.DataSource = dt;
                chart1.Series[0].XValueMember = "Producent";
                chart1.Series[0].YValueMembers = "Broj";
                chart1.Series[0].IsValueShownAsLabel = true;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Greska: " + ex.Message);
            }
            finally
            {
                conn.Close();
                cmd.Dispose();
                adapter.Dispose();
            }
        }
 
        private void buttonIzadji_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}
======================================================================================================================================
FORMA 3
======================================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
 
namespace _4ЕИТ_A13
{
    public partial class FormOAplikaciji : Form
    {
        public FormOAplikaciji()
        {
            InitializeComponent();
        }
 
        private void FormOAplikaciji_Load(object sender, EventArgs e)
        {
            richTextBox1.LoadFile(@"..\..\A13.rtf");
        }
    }
}
======================================================================================================================================================
PROSIRENJE
======================================================================================================================================================
ALTER TABLE Glumac
ADD Nadimak VARCHAR(30);
 
CREATE TABLE Zaposleni (
	ZaposleniID INT NOT NULL,
	Ime VARCHAR(20) NOT NULL,
	Prezime VARCHAR(20) NOT NULL,
	Telefon VARCHAR(20) NOT NULL,
	Adresa VARCHAR(50) NOT NULL,
	PRIMARY KEY(ZaposleniID)
);
 
CREATE TABLE Zaposleni_Film (
	PozajmicaID INT NOT NULL,
	ZaposleniID INT NOT NULL,
	FilmID INT NOT NULL,
	PRIMARY KEY(PozajmicaID, ZaposleniID, FilmID),
	FOREIGN KEY(ZaposleniID) REFERENCES Zaposleni(ZaposleniID),
	FOREIGN KEY(FilmID) REFERENCES Film(FilmID)
);
 
ALTER TABLE Film
ADD Slobodan BIT;
