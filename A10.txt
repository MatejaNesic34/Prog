FORMA 1
=====================================================================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
 
namespace A10Blok
{
    public partial class Form1 : Form
    {
        SqlConnection konekcija = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\A10.mdf;Integrated Security=True");
        DataTable dt = new DataTable();
        public Form1()
        {
            InitializeComponent();
        }
 
        private void UcitajListBox()
        {
            try
            {
                konekcija.Open();
                string sqlUpit = "SELECT PecarosID, Ime, Prezime, Adresa, Grad, Telefon FROM Pecaros, Grad WHERE Pecaros.GradID = Grad.GradID";
                SqlCommand komanda = new SqlCommand(sqlUpit, konekcija);
                SqlDataAdapter da = new SqlDataAdapter(komanda);
                dt.Clear();
                da.Fill(dt);
                konekcija.Close();
                listBox1.Items.Clear();
                foreach (DataRow row in dt.Rows)
                {
                    listBox1.Items.Add(String.Format("{0,-7} {1,-15} {2,-15} {3, -25} {4, -15} {5, -10}", row["PecarosID"], row["Ime"], row["Prezime"], row["Adresa"], row["Grad"], row["Telefon"]));
                }
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
 
        }
 
        private void tbPodaci()
        {
            try
            {
                konekcija.Open();
                string sqlUpit = "SELECT PecarosID, Ime, Prezime, Adresa, Grad, Telefon FROM Pecaros, Grad WHERE Pecaros.GradID = Grad.GradID ORDER BY PecarosID ASC";
                SqlCommand komanda = new SqlCommand(sqlUpit, konekcija);
                SqlDataAdapter da = new SqlDataAdapter(komanda);
                DataTable dt2 = new DataTable();
                da.Fill(dt2);
                konekcija.Close();
                tbSifra.Text = dt2.Rows[0]["PecarosID"].ToString();
                tbIme.Text = dt2.Rows[0]["Ime"].ToString();
                tbPrezime.Text = dt2.Rows[0]["Prezime"].ToString();
                tbAdresa.Text = dt2.Rows[0]["Adresa"].ToString();
                cbGrad.Text = dt2.Rows[0]["Grad"].ToString();
                tbTelefon.Text = dt2.Rows[0]["Telefon"].ToString();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
 
        }
 
        private void cbPodaci()
        {
            try
            {
                DataTable dt2 = new DataTable();
                konekcija.Open();
                string sqlUpit2 = "SELECT DISTINCT GradID, Grad FROM Grad ORDER BY Grad ASC";
                SqlCommand komanda2 = new SqlCommand(sqlUpit2, konekcija);
                SqlDataAdapter da2 = new SqlDataAdapter(komanda2);
                da2.Fill(dt2);
                konekcija.Close();
                cbGrad.DataSource = dt2;
                cbGrad.DisplayMember = "Grad";
                cbGrad.ValueMember = "GradID";
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
 
        private void ObrisiPodatke()
        {
            tbSifra.Text = "";
            tbIme.Text = "";
            tbPrezime.Text = "";
            tbAdresa.Text = "";
            cbGrad.SelectedText = "";
            tbTelefon.Text = "";
        }
 
        private void Form1_Load(object sender, EventArgs e)
        {
            UcitajListBox();
            cbPodaci();
            tbPodaci();
        }
 
        private void tstripIzmeni_Click(object sender, EventArgs e)
        {
 
            if(tbIme.Text == "" || tbPrezime.Text == "" || tbAdresa.Text == "" || tbTelefon.Text == "")
            {
                MessageBox.Show("Morate uneti sve podatke!");
                return;
            }
            if (tbSifra.Text != "")
            {
 
 
 
                try
                {
                    konekcija.Open();
                    string sqlIzmena = "UPDATE Pecaros SET Ime = @Ime, Prezime = @Prezime, Adresa = @Adresa, GradID = @Grad, Telefon = @Telefon WHERE PecarosID = @PecarosID";
                    SqlCommand komandaIzmena = new SqlCommand(sqlIzmena, konekcija);
                    komandaIzmena.Parameters.AddWithValue("@PecarosID", Convert.ToInt32(tbSifra.Text));
                    komandaIzmena.Parameters.AddWithValue("@Ime", tbIme.Text);
                    komandaIzmena.Parameters.AddWithValue("@Prezime", tbPrezime.Text);
                    komandaIzmena.Parameters.AddWithValue("@Adresa", tbAdresa.Text);
                    komandaIzmena.Parameters.AddWithValue("@Grad", cbGrad.SelectedValue);
                    komandaIzmena.Parameters.AddWithValue("@Telefon", tbTelefon.Text);
                    komandaIzmena.ExecuteNonQuery();
                    konekcija.Close();
                    UcitajListBox();
                    ObrisiPodatke();
                    MessageBox.Show("Podaci su uspesno izmenjeni!");
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
            else
            {
                MessageBox.Show("Morate izabrati red koji zelite da izmenite!");
            }
 
        }
 
        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            tbSifra.Text = dt.Rows[listBox1.SelectedIndex]["PecarosID"].ToString();
            tbIme.Text = dt.Rows[listBox1.SelectedIndex]["Ime"].ToString();
            tbPrezime.Text = dt.Rows[listBox1.SelectedIndex]["Prezime"].ToString();
            tbAdresa.Text = dt.Rows[listBox1.SelectedIndex]["Adresa"].ToString();
            cbGrad.Text = dt.Rows[listBox1.SelectedIndex]["Grad"].ToString();
            tbTelefon.Text = dt.Rows[listBox1.SelectedIndex]["Telefon"].ToString();
        }
 
        private void tstripAnaliza_Click(object sender, EventArgs e)
        {
            Analiza a1 = new Analiza();
            a1.Show();
        }
 
        private void tstripIzlaz_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }
 
        private void tstripOAplikaciji_Click(object sender, EventArgs e)
        {
            Uputstvo u1 = new Uputstvo();
            u1.Show();
        }
    }
}
=============================================================================================================================================================================================
FORMA 2
=============================================================================================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
 
namespace A10Blok
{
    public partial class Analiza : Form
    {
        SqlConnection konekcija = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\A10.mdf;Integrated Security=True");
 
        public Analiza()
        {
            InitializeComponent();
        }
 
        private void ComboBoxPodaci()
        {
 
                try
                {
                    konekcija.Open();
                    DataTable dt = new DataTable();
                    string sqlUpit = "SELECT PecarosID, CONCAT(PecarosID, ' - ', Ime, ' ', Prezime) AS ImePrezime FROM Pecaros";
                    SqlCommand komanda = new SqlCommand(sqlUpit, konekcija);
                    SqlDataAdapter da = new SqlDataAdapter(komanda);
                    da.Fill(dt);
                    konekcija.Close();
                    comboBox1.DataSource = dt;
                    comboBox1.DisplayMember = "ImePrezime";
                    comboBox1.ValueMember = "PecarosID";
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
 
        }
 
        private void Analiza_Load(object sender, EventArgs e)
        {
            ComboBoxPodaci();
        }
 
        private void btnIzadji_Click(object sender, EventArgs e)
        {
            this.Close();
        }
 
        private void btnPrikazi_Click(object sender, EventArgs e)
        {
            try
            {
                konekcija.Open();
                string sqlUpit = "SELECT Naziv AS Vrsta, COUNT(Ulov.VrstaID) AS Broj FROM Vrsta_Ribe, Ulov, Pecaros WHERE Ulov.PecarosID = Pecaros.PecarosID AND Pecaros.PecarosID = @param3 AND Ulov.VrstaID = Vrsta_Ribe.VrstaID AND Datum BETWEEN @param1 AND @param2 GROUP BY Naziv";
                SqlCommand komanda = new SqlCommand(sqlUpit, konekcija);
                komanda.Parameters.AddWithValue("@param1", dtpOd.Value);
                komanda.Parameters.AddWithValue("@param2", dtpDo.Value);
                komanda.Parameters.AddWithValue("@param3", comboBox1.SelectedValue);
                SqlDataAdapter da = new SqlDataAdapter(komanda);
                DataTable dt = new DataTable();
                da.Fill(dt);
                konekcija.Close();
                dataGridView1.DataSource = dt;
                chart1.DataSource = dt;
                chart1.Series[0].XValueMember = "Vrsta";
                chart1.Series[0].YValueMembers = "Broj";
                chart1.Series[0].IsValueShownAsLabel = true;
 
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }
    }
}
================================================================================================================================================================================================
PROSIRENJE
================================================================================================================================================================================================
CREATE TABLE [dbo].[Oprema] (
    [OpremaID] INT          NOT NULL,
    [Vrsta]    VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([OpremaID] ASC)
);
 
ALTER TABLE [dbo].[Ulov]
    ADD [OpremaID] INT NOT NULL, 
    CONSTRAINT [FK_Ulov_ToOprema] FOREIGN KEY ([OpremaID]) REFERENCES [Oprema]([OpremaID]);
